name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  example-1:
    runs-on: ubuntu-latest
    steps:
      # - uses: actions/checkout@v4
      #   with:
      #     ref: ${{ github.sha }}
          # submodules: recursive

      # - name: Generate version tag
      #   id: generate-tag
      #   uses: mathieudutour/github-tag-action@fcfbdceb3093f6d85a3b194740f8c6cec632f4e2 # commit SHA for tag v6.1
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     dry_run: true
      #     fetch_all_tags: true

      # - name: Print New Version
      #   run: |
      #     echo "version='${{ steps.generate-tag.outputs.new_version }}'"

      - name: Prepare Jira Comment
        id: prepare-jira
        uses: actions/github-script@v6
        env:
          REPOSITORY: ${{ github.repository }}
          SHA: ${{ github.sha }}
        with:
          debug: true
          script: |
            const { REPOSITORY, SHA, VERSION_TAG} = process.env

            // Unpack owner, repo and commit
            const [owner, repo] = REPOSITORY.split('/')

            // Retrieve Run URL

            // https://api.github.com/repos/hello/actions/runs/6712384947/jobs
            // try {
              const {data: response}  = await github.request('GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs', {
                owner,
                repo,
                run_id: context.runId,
              })
              core.info(context.job)
              core.info(JSON.stringify(response,null,2))
              // const jobRun = reponse.jobs.filter((job) => job.id == context.job).pop()
              // const jobRunUrl = jobRun.html_url
              // core.warning(jobRunUrl)
            // } catch (err) {
              // core.warning(`Unable retrieve a workflow run with run ID: ${context.runId}`)
              // return
            // }

  example-2:
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{ github.job }}